{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/gui/src/components/Alarm.js\";\nimport React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\nclass Alarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.data.id,\n      time: this.calculateDate(this.props.date)[1],\n      date: this.calculateDate(this.props.date)[0],\n      affectedSystems: props.data.affectedSystems,\n      suspectedAttackType: props.data.suspectedAttackType,\n      probability: props.data.probability,\n      automaticReaction: props.data.automaticReaction,\n      checklist: props.data.checklist,\n      category: this.calculateCatergory(props.data.probability)\n    };\n  }\n\n  calculateCatergory(probability) {\n    if (probability >= 95) {\n      return [\"critical\", '#E94D4D'];\n    } else if (probability >= 85) {\n      return [\"major\", '#FF994F'];\n    } else {\n      return [\"minor\", '#EDC535'];\n    }\n\n    ;\n  }\n\n  calculateDate(timestamp) {\n    let date = new Date(timestamp * 1000); //frag nicht wieso *1000, https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    console.log(timestamp, date, hours, minutes, seconds);\n    return [`${date}`, `${hours}:${minutes}:${seconds}`];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Card.Header,\n          class: \"p-0\",\n          eventKey: this.props,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"font-weight-lighter ml-2 mt-n2\",\n              children: [\"Alarm #\", this.state.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              class: \"ml-2 mb-n1\",\n              children: this.state.suspectedAttackType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"tag ml-2 mt-1\",\n              style: {\n                \"background-color\": this.state.category[1]\n              },\n              children: [\"\\u200D \\u200D \", this.state.category[0], \" \\u200D \\u200D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"text-right w-100 mt-n4\",\n              children: [this.state.date, \" \", this.state.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: this.props,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          style: {\n            \"border-color\": \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  class: \"ml-2 mt-n2\",\n                  children: \"Propability\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"ml-2 mt-n2 font-weight-lighter\",\n                  children: [this.state.probability, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  class: \"ml-2\",\n                  children: \"Affected Systems\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"ml-2 mt-n2 font-weight-lighter\",\n                  children: this.state.affectedSystems.join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  class: \"ml-2\",\n                  children: \"Automatic Reaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  class: \"ml-2 mt-n2 mb-n2 font-weight-lighter\",\n                  children: this.state.automaticReaction.length !== 0 ? this.state.automaticReaction.join(\", \") : \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                class: \"mt-n2\",\n                children: \"Checklist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicCheckbox\",\n                class: \"mb-n2\",\n                children: this.state.checklist.map(check => {\n                  return /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      class: \"font-weight-lighter\",\n                      children: check\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 83\n                    }, this),\n                    id: check\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Alarm;","map":{"version":3,"sources":["/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/gui/src/components/Alarm.js"],"names":["React","Accordion","Card","Button","Row","Form","Col","Alarm","Component","constructor","props","state","id","data","time","calculateDate","date","affectedSystems","suspectedAttackType","probability","automaticReaction","checklist","category","calculateCatergory","timestamp","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","console","log","render","Header","join","length","map","check"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col';\n\n\nclass Alarm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.data.id,\n            time: this.calculateDate(this.props.date)[1],\n            date: this.calculateDate(this.props.date)[0],\n            affectedSystems: props.data.affectedSystems,\n            suspectedAttackType: props.data.suspectedAttackType,\n            probability: props.data.probability,\n            automaticReaction: props.data.automaticReaction,\n            checklist: props.data.checklist,\n            category: this.calculateCatergory(props.data.probability)\n        };\n    }\n\n    calculateCatergory(probability) {\n        if (probability >= 95) { return [\"critical\", '#E94D4D'] }\n        else if (probability >= 85) { return [\"major\", '#FF994F'] }\n        else { return [\"minor\", '#EDC535'] };\n    }\n\n    calculateDate(timestamp) {\n        let date = new Date(timestamp * 1000); //frag nicht wieso *1000, https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let seconds = date.getSeconds();\n        console.log(timestamp, date, hours, minutes, seconds);\n        return [`${date}`, `${hours}:${minutes}:${seconds}`]\n    }\n\n    render() {\n        return (\n            <Card>\n\n                <Card.Header>\n                    <Accordion.Toggle as={Card.Header} class=\"p-0\" eventKey={this.props}>\n                        <Row>\n                            <h5 class=\"font-weight-lighter ml-2 mt-n2\">Alarm #{this.state.id}</h5>\n                        </Row>\n                        <Row>\n                            <h3 class=\"ml-2 mb-n1\">{this.state.suspectedAttackType}</h3>\n                            <div class=\"tag ml-2 mt-1\" style={{ \"background-color\": this.state.category[1] }}>\n                                &#8205; &#8205; {this.state.category[0]} &#8205; &#8205;\n                            </div>\n                            <div class=\"text-right w-100 mt-n4\">\n                                {this.state.date} {this.state.time}\n                            </div>\n                        </Row>\n                    </Accordion.Toggle>\n                </Card.Header>\n\n                <Accordion.Collapse eventKey={this.props}>\n                    <Card.Body style={{ \"border-color\": \"red\" }}>\n                        <Row>\n                            <Col>\n                                <Row><h6 class=\"ml-2 mt-n2\">Propability</h6></Row>\n                                <Row><h2 class=\"ml-2 mt-n2 font-weight-lighter\">{this.state.probability}%</h2></Row>\n                                <Row><h6 class=\"ml-2\">Affected Systems</h6></Row>\n                                <Row><h2 class=\"ml-2 mt-n2 font-weight-lighter\">{this.state.affectedSystems.join(', ')}</h2></Row>\n                                <Row><h6 class=\"ml-2\">Automatic Reaction</h6></Row>\n                                <Row><h2 class=\"ml-2 mt-n2 mb-n2 font-weight-lighter\">{this.state.automaticReaction.length !== 0 ? this.state.automaticReaction.join(\", \") : \"None\"}</h2></Row>\n                            </Col>\n                            <Col>\n                                <h6 class=\"mt-n2\">Checklist</h6>\n                                <Form.Group controlId=\"formBasicCheckbox\" class=\"mb-n2\">\n                                    {this.state.checklist.map(check => {\n                                        return <Form.Check type=\"checkbox\" label={<h4 class=\"font-weight-lighter\">{check}</h4>} id={check} />\n                                    })}\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card >);\n    }\n}\n\nexport default Alarm;\n"]},"metadata":{},"sourceType":"module"}