{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/gui/src/components/Chart.js\";\n\n/* App.js */\nimport React from 'react';\nimport CanvasJSChart from '../lib/canvasjs.react';\n\nclass Chart extends React.Component {\n  render() {\n    var datapoints = [];\n    this.props.data.forEach(alarm => {\n      datapoints.push({\n        x: alarm.date,\n        y: alarm.probability,\n        color: alarm.probability >= 95 ? \"#E94D4D\" : alarm.probability >= 85 ? \"#FF994F\" : alarm.probability >= 75 ? \"#EDC535\" : \"#4A73B0\"\n      });\n    });\n    console.log(datapoints);\n    const options = {\n      animationEnabled: false,\n      exportEnabled: true,\n      theme: \"light1\",\n      //\"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Alarm/Event History\",\n        fontFamily: \"open sans\"\n      },\n      axisX: {\n        minimum: datapoints[0] - 1000000,\n        maximum: datapoints[0] + 1000000\n      },\n      axisY: {\n        title: \"Probability\",\n        gridThickness: 0,\n        includeZero: true,\n        maximum: 100,\n        stripLines: [{\n          startValue: 75,\n          endValue: 75.5,\n          color: \"#EDC535\"\n        }, {\n          startValue: 85,\n          endValue: 85.5,\n          color: \"#FF994F\"\n        }, {\n          startValue: 95,\n          endValue: 95.5,\n          color: \"#E94D4D\"\n        }]\n      },\n      dataPointMinWidth: 5,\n      data: [{\n        type: \"scatter\",\n        xValueType: \"dateTime\",\n        dataPoints: datapoints\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/gui/src/components/Chart.js"],"names":["React","CanvasJSChart","Chart","Component","render","datapoints","props","data","forEach","alarm","push","x","date","y","probability","color","console","log","options","animationEnabled","exportEnabled","theme","title","text","fontFamily","axisX","minimum","maximum","axisY","gridThickness","includeZero","stripLines","startValue","endValue","dataPointMinWidth","type","xValueType","dataPoints"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAEhCC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,KAAK,IAAI;AAC7BJ,MAAAA,UAAU,CAACK,IAAX,CAAgB;AAAEC,QAAAA,CAAC,EAAEF,KAAK,CAACG,IAAX;AAAiBC,QAAAA,CAAC,EAAEJ,KAAK,CAACK,WAA1B;AAAuCC,QAAAA,KAAK,EAAGN,KAAK,CAACK,WAAN,IAAqB,EAArB,GAA0B,SAA1B,GAAuCL,KAAK,CAACK,WAAN,IAAqB,EAArB,GAA0B,SAA1B,GAAuCL,KAAK,CAACK,WAAN,IAAqB,EAArB,GAA0B,SAA1B,GAAsC;AAAnK,OAAhB;AACH,KAFD;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACA,UAAMa,OAAO,GAAG;AACZC,MAAAA,gBAAgB,EAAE,KADN;AAEZC,MAAAA,aAAa,EAAE,IAFH;AAGZC,MAAAA,KAAK,EAAE,QAHK;AAGK;AACjBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,qBADH;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAJK;AAQZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAErB,UAAU,CAAC,CAAD,CAAV,GAAgB,OADtB;AAEHsB,QAAAA,OAAO,EAAEtB,UAAU,CAAC,CAAD,CAAV,GAAgB;AAFtB,OARK;AAYZuB,MAAAA,KAAK,EAAE;AACHN,QAAAA,KAAK,EAAE,aADJ;AAEHO,QAAAA,aAAa,EAAE,CAFZ;AAGHC,QAAAA,WAAW,EAAE,IAHV;AAIHH,QAAAA,OAAO,EAAE,GAJN;AAKHI,QAAAA,UAAU,EAAE,CACR;AACIC,UAAAA,UAAU,EAAE,EADhB;AAEIC,UAAAA,QAAQ,EAAE,IAFd;AAGIlB,UAAAA,KAAK,EAAE;AAHX,SADQ,EAMR;AACIiB,UAAAA,UAAU,EAAE,EADhB;AAEIC,UAAAA,QAAQ,EAAE,IAFd;AAGIlB,UAAAA,KAAK,EAAE;AAHX,SANQ,EAWR;AACIiB,UAAAA,UAAU,EAAE,EADhB;AAEIC,UAAAA,QAAQ,EAAE,IAFd;AAGIlB,UAAAA,KAAK,EAAE;AAHX,SAXQ;AALT,OAZK;AAoCZmB,MAAAA,iBAAiB,EAAE,CApCP;AAqCZ3B,MAAAA,IAAI,EAAE,CAAC;AAEH4B,QAAAA,IAAI,EAAE,SAFH;AAGHC,QAAAA,UAAU,EAAE,UAHT;AAIHC,QAAAA,UAAU,EAAEhC;AAJT,OAAD;AArCM,KAAhB;AA6CA,wBACI;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEa;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA1D+B;;AA6DpC,eAAehB,KAAf","sourcesContent":["/* App.js */\nimport React from 'react';\nimport CanvasJSChart from '../lib/canvasjs.react';\n\nclass Chart extends React.Component {\n\n    render() {\n        var datapoints = [];\n        this.props.data.forEach(alarm => {\n            datapoints.push({ x: alarm.date, y: alarm.probability, color: (alarm.probability >= 95 ? \"#E94D4D\" : (alarm.probability >= 85 ? \"#FF994F\" : (alarm.probability >= 75 ? \"#EDC535\" : \"#4A73B0\"))) });\n        });\n        console.log(datapoints);\n        const options = {\n            animationEnabled: false,\n            exportEnabled: true,\n            theme: \"light1\", //\"light1\", \"dark1\", \"dark2\"\n            title: {\n                text: \"Alarm/Event History\",\n                fontFamily: \"open sans\"\n            },\n            axisX: {\n                minimum: datapoints[0] - 1000000,\n                maximum: datapoints[0] + 1000000\n            },\n            axisY: {\n                title: \"Probability\",\n                gridThickness: 0,\n                includeZero: true,\n                maximum: 100,\n                stripLines: [\n                    {\n                        startValue: 75,\n                        endValue: 75.5,\n                        color: \"#EDC535\"\n                    },\n                    {\n                        startValue: 85,\n                        endValue: 85.5,\n                        color: \"#FF994F\"\n                    },\n                    {\n                        startValue: 95,\n                        endValue: 95.5,\n                        color: \"#E94D4D\"\n                    },\n\n                ]\n            },\n            dataPointMinWidth: 5,\n            data: [{\n\n                type: \"scatter\",\n                xValueType: \"dateTime\",\n                dataPoints: datapoints\n            }]\n        }\n\n        return (\n            <div>\n                <CanvasJSChart options={options} />\n            </div >\n        );\n    }\n}\n\nexport default Chart;  "]},"metadata":{},"sourceType":"module"}