{"ast":null,"code":"const affectedSystemsArray = [\"DNS-Server\", \"Database\", \"PAX-System\", \"IT-Desk\", \"Firewall\", \"Switchboard\", \"File-Server\", \"Backup-Server\", \"Print-Server\", \"Mail-Server\", \"Coffee Machine\"];\nconst suspectedAttackTypeArray = [\"SQL-Injection\", \"Denial of Service\", \"Man in the Middle\", \"Brute Force\", \"Virus\", \"Trojan\", \"Registry-Attack\", \"Remote Binary Planting\", \"Server Message Block\"];\nconst automaticReactionArray = [\"System-Shutdown\", \"Database-Shutdown\", \"Systen-Restart\", \"Disconnect from Internet\", \"Disconnect affected Systems\", \"Blocked User-Login\"];\nconst checklistArray = [\"Restart the system\", \"Call Incidence-Response-Team\", \"Reset Login-Data\", \"Stop all departures\", \"Shut down the database\", \"Stop all arrivals\", \"Notify your manager\", \"Drink some coffee\", \"Take a break\", \"Change Server-Location\", \"Activate the Hyper-Defense-Software\", \"Get help\", \"Quit\"];\n\nfunction generateRandomAlarm() {\n  var today = new Date();\n  var randomProbability = Math.floor(Math.random() * 26) + 75;\n  return {\n    id: Math.floor(Math.random() * 1000000),\n    time: today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n    date: today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear(),\n    affectedSystems: [_.shuffle(affectedSystemsArray).splice(Math.floor(Math.random() * 3))],\n    suspectedAttackType: suspectedAttackTypeArray[Math.floor(Math.random() * suspectedAttackTypeArray.length)],\n    probability: randomProbability,\n    automaticReaction: randomProbability > 95 ? [_.shuffle(automaticReactionArray).splice(Math.floor(Math.random() * 3))] : [],\n    checklist: [_.shuffle(checkListArray).splice(Math.floor(Math.random() * 7))],\n    probability: randomProbability,\n    automaticReaction: randomProbability > 95 ? [_.shuffle(automaticReactionArray).splice(Math.floor(Math.random() * 3))] : [],\n    checklist: [_.shuffle(checkListArray).splice(Math.floor(Math.random() * 7))]\n  };\n}\n\nexport { generateRandomAlarm };","map":{"version":3,"sources":["/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/gui/src/generateAlarm.js"],"names":["affectedSystemsArray","suspectedAttackTypeArray","automaticReactionArray","checklistArray","generateRandomAlarm","today","Date","randomProbability","Math","floor","random","id","time","getHours","getMinutes","getSeconds","date","getDate","getMonth","getFullYear","affectedSystems","_","shuffle","splice","suspectedAttackType","length","probability","automaticReaction","checklist","checkListArray"],"mappings":"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","sourcesContent":["const affectedSystemsArray = [\"DNS-Server\", \"Database\", \"PAX-System\", \"IT-Desk\", \"Firewall\", \"Switchboard\", \"File-Server\", \"Backup-Server\", \"Print-Server\", \"Mail-Server\", \"Coffee Machine\"];\nconst suspectedAttackTypeArray = [\"SQL-Injection\", \"Denial of Service\", \"Man in the Middle\", \"Brute Force\", \"Virus\", \"Trojan\", \"Registry-Attack\", \"Remote Binary Planting\", \"Server Message Block\"];\nconst automaticReactionArray = [\"System-Shutdown\", \"Database-Shutdown\", \"Systen-Restart\", \"Disconnect from Internet\", \"Disconnect affected Systems\", \"Blocked User-Login\"]\nconst checklistArray = [\"Restart the system\", \"Call Incidence-Response-Team\", \"Reset Login-Data\", \"Stop all departures\", \"Shut down the database\", \"Stop all arrivals\", \"Notify your manager\", \"Drink some coffee\", \"Take a break\", \"Change Server-Location\", \"Activate the Hyper-Defense-Software\", \"Get help\", \"Quit\"]\n\nfunction generateRandomAlarm() {\n\n    var today = new Date();\n    var randomProbability = Math.floor(Math.random() * 26) + 75\n\n    return {\n        id: Math.floor(Math.random() * 1000000),\n        time: today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n        date: today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear(),\n        affectedSystems: [_.shuffle(affectedSystemsArray).splice(Math.floor(Math.random() * 3))],\n        suspectedAttackType: suspectedAttackTypeArray[Math.floor(Math.random() * suspectedAttackTypeArray.length)],\n        probability: randomProbability,\n        automaticReaction: randomProbability > 95 ? [_.shuffle(automaticReactionArray).splice(Math.floor(Math.random() * 3))] : [],\n        checklist: [_.shuffle(checkListArray).splice(Math.floor(Math.random() * 7))],\n        probability: randomProbability,\n        automaticReaction: randomProbability > 95 ? [_.shuffle(automaticReactionArray).splice(Math.floor(Math.random() * 3))] : [],\n        checklist: [_.shuffle(checkListArray).splice(Math.floor(Math.random() * 7))]\n    }\n}\n\nexport { generateRandomAlarm };"]},"metadata":{},"sourceType":"module"}