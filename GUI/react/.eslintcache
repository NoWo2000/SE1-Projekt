[{"/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/components/App.js":"1","/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/api.js":"2","/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/lib/canvasjs.react.js":"3","/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/lib/canvasjs.min.js":"4"},{"size":2999,"mtime":1606744626000,"results":"5","hashOfConfig":"6"},{"size":208,"mtime":1606736089000,"results":"7","hashOfConfig":"6"},{"size":1687,"mtime":1606734273000,"results":"8","hashOfConfig":"6"},{"size":459239,"mtime":1606734273000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1odssb6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/components/App.js",["20"],"import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Alarm from './Alarm.js';\nimport Chart from './Chart.js';\nimport { subscribeToEvent } from '../api.js';\nimport { generateRandomAlarm } from '../generateAlarm.js';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            alarmArray: [{\n                id: \"ID\",\n                time: \"date and time\",\n                affectedSystems: [],\n                suspectedAttackType: \"Suspected Attack Type\",\n                probability: 0,\n                automaticReaction: [],\n                checklist: []\n            }],\n            alarmArrayReversed:[]\n        };\n\n        subscribeToEvent((err, EventData) => {\n            this.setState({ alarmArray: [...this.state.alarmArray, EventData] });\n        });\n\n        this.generateAlarm = this.generateAlarm.bind(this);\n    }\n\n    componentDidMount() {\n        let start = (+ new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())/1000);\n        fetch(`http://gns3.p-fruck.de/api/alerts?start=${start}`)\n            .then(result => result.json())\n            .then(\n                (result) => {\n                    result.map(alarm => {\n                        alarm.time = alarm.time * 1000;\n                    })\n                    this.setState({\n                        alarmArray: this.state.alarmArray.concat(result)\n                    });\n                },\n                (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    generateAlarm() {\n        let a = [...this.state.alarmArray, generateRandomAlarm()]\n        this.setState({ alarmArray: a });\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                {/* Header */}\n                <Row>\n                    <h1 class=\"mx-auto mt-2 pb-4 pt-1\" onClick={this.generateAlarm}>GUI - Alarm Detection Software</h1>\n                </Row>\n                {/* Main Content */}\n                <Row>\n                    {/* Alarm List */}\n                    <Col md={6}>\n                        <Accordion defaultActiveKey={this.state.alarmArray[0]}>\n                            {this.state.alarmArray.map(alarm => {\n                                if (alarm.probability >= 75) {\n                                    return <Alarm data={alarm}></Alarm>\n                                } else {\n                                    return \"\"\n                                }\n                            })}\n                        </Accordion>\n                    </Col>\n                    <Col>\n                        {/* 24h-Course */}\n                        <Chart data={this.state.alarmArray}></Chart>\n                    </Col>\n                </Row>\n            </Container >\n        );\n    }\n}\n\nexport default App;","/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/api.js",[],"/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/lib/canvasjs.react.js",["21"],"var React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSChart;","/Users/silaspohl/Desktop/Studium/3. Semester/Software Engineering/SE1-Projekt/GUI/react/src/lib/canvasjs.min.js",[],{"ruleId":"22","severity":1,"message":"23","line":41,"column":38,"nodeType":"24","messageId":"25","endLine":41,"endColumn":40},{"ruleId":"26","severity":1,"message":"27","line":43,"column":5,"nodeType":"28","messageId":"29","endLine":43,"endColumn":18},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'CanvasJSReact' is assigned a value but never used.","Identifier","unusedVar"]